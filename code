// ==UserScript==
// @name         ネクストレベル自動設定スクリプト（ボタンなし）
// @namespace    https://www.e-nextlevel.jp/
// @version      1.3
// @description  軽作業・催事・スキマバイト + 東京都 + エントリー可否 強制設定＋ログ出力（ボタンなし）
// @match        https://www.e-nextlevel.jp/work/search*
// @grant        none
// @run-at       document-idle
// ==/UserScript==

(function () {
  'use strict';

  const TARGET_JOB_LABELS = ['軽作業', '催事・イベント・展示会'];
  const TARGET_RADIO_LABEL = 'スキマバイト';
  const PREF_TARGET = '東京都';

  function logChange(label, oldValue, newValue) {
    if (oldValue !== newValue) {
      console.log(`[変更検知] ${label}: ${oldValue} → ${newValue}`);
    }
  }

  function forceSelectOptions() {
    let updated = false;

    // 職種チェックと都道府県制御
    document.querySelectorAll('label.sideModalForm__checkbox').forEach(label => {
      const span = label.querySelector('.sideModalForm__checkboxText');
      const input = label.querySelector('input[type="checkbox"]');
      if (!span || !input) return;

      const text = span.textContent.trim();

      // 職種チェックボックス処理
      if (TARGET_JOB_LABELS.includes(text)) {
        if (!input.checked) {
          logChange(`職種: ${text}`, '未選択', '選択');
          input.checked = true;
          input.dispatchEvent(new Event('change', { bubbles: true }));
          updated = true;
        }
      }

      // 都道府県チェックボックス処理
      if (/県|府|都/.test(text)) {
        const shouldBeChecked = text === PREF_TARGET;
        if (input.checked !== shouldBeChecked) {
          logChange(`都道府県: ${text}`, input.checked ? '選択' : '未選択', shouldBeChecked ? '選択' : '未選択');
          input.checked = shouldBeChecked;
          input.dispatchEvent(new Event('change', { bubbles: true }));
          updated = true;
        }
      }
    });

    // スキマバイトラジオボタン処理
    document.querySelectorAll('label.sideModalForm__radio').forEach(label => {
      const span = label.querySelector('.sideModalForm__radioText');
      const input = label.querySelector('input[type="radio"]');
      if (!span || !input) return;

      const text = span.textContent.trim();
      if (text === TARGET_RADIO_LABEL && !input.checked) {
        logChange(`勤務形態: ${text}`, '未選択', '選択');
        input.checked = true;
        input.dispatchEvent(new Event('change', { bubbles: true }));
        updated = true;
      }
    });

    // エントリー可否ボタン
    const entryBtn = document.querySelector('#narrowingDown');
    if (entryBtn) {
      const currentText = entryBtn.textContent.trim();
      const isChecked = entryBtn.classList.contains('is_checked');
      if (currentText !== 'エントリー可' || !isChecked) {
        logChange('エントリー可否ボタン', currentText + (isChecked ? ' (✓)' : ' (✗)'), 'エントリー可 (✓)');
        entryBtn.textContent = 'エントリー可';
        entryBtn.classList.add('is_checked');
        updated = true;
      }
    }

    return updated;
  }

  function waitForElementsAndApply() {
    const interval = setInterval(() => {
      const ready = document.querySelector('label.sideModalForm__checkbox')
                && document.querySelector('label.sideModalForm__radio')
                && document.querySelector('#narrowingDown');
      if (ready) {
        const changed = forceSelectOptions();
        console.log(changed ? '✅ 自動設定を適用しました。' : 'ℹ️ 自動設定は既に反映済みです。');
        clearInterval(interval);
      }
    }, 500);
  }

  window.addEventListener('load', waitForElementsAndApply);
})();
